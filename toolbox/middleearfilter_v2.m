function b = middleearfilter_v2(fs,order)
%MIDDLEEARFILTER   Middle ear filter.
%   Usage: b=middleearfilter(fs,order);
%          b=middleearfilter(fs);
%          b=middleearfilter;
%
%   MIDDLEEARFILTER(fs,order) computes the filter coefficients of a FIR
%   filter or order order approximating the effect of the middle ear.
%
%   MIDDLEEARFILTER(fs) does the same with a FIR filter of order 512.
%
%   MIDDLEEARFILTER without any input arguments returns a table
%   describing the frequency response of the middle ear filter. First
%   column of the table contain frequencies and the second column
%   contains the amplitude of the frequency.
%  
%   REFERENCES:
%     R. Goode, M. Killion, K. Nakamura, and S. Nishihara. New knowledge
%     about the function of the human middle ear: development of an improved
%     analog model. The American journal of otology, 15(2):145-154, 1994.
%     
%     E. Lopez-Poveda and R. Meddis. A human nonlinear cochlear filterbank.
%     The Journal of the Acoustical Society of America, 110:3107, 2001.

% Copyright (C) 2009 CAHR.
% This file is part of CASP version 0.01
% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.
  
% Author: Morten Lve Jepsen


if nargin==1
  order = 512;    % desired FIR filter order
end;

stapes_data_old = [...
    50,	 48046.39731;...
    100, 24023.19865;...
    200, 12011.59933;...
    400,  6005.799663;...
    600, 3720.406871;...
    800,  2866.404385;...
    1000, 3363.247811;...
    1200, 4379.228921;...
    1400, 4804.639731;...
    1600, 5732.808769;...
    1800, 6228.236688;...
    2000, 7206.959596;...
    2200, 9172.494031;...
    2400, 9554.681282;...
    2600, 10779.64042;...
    2800, 12011.59933;...
    3000, 14013.53255;...
    3500, 16015.46577;...
    4000, 18017.39899;...
    4500, 23852.82136;...
    5000, 21020.29882;...
    5500, 22931.23508;...
    6000, 28027.06509;...
    6500, 28745.70779;...
    7000, 32098.9;...
    7500, 34504.4;...
    8000, 36909.9;...
    8500, 39315.4;...
    9000, 41720.9;...
    9500, 44126.4;...
    10000,46531.9;...
    ];
stapes_data = [...
    50,	 96000.39731;...
    100, 48000.19865;...
    200, 24011.59933;...
    400,  12005.799663;...
    600, 7440.406871;...
    800,  5203.404385;...
    1200, 2850;...
    1400, 3104.639731;...
    1600, 3300.808769;...
    1800, 3600.236688;...
    2000, 4100.959596;...
    2200, 4400.494031;...
    2400, 4800.681282;...
    2600, 5100.64042;...
    2800, 5600.59933;...
    3000, 6500.53255;...
    3500, 8480.46577;...
    4000, 8550.39899;...
    4500, 11000.82136;...
    5000, 10100.29882;...
    5500, 10700.23508;...
    6000, 13300.06509;...
    6500, 13600.70779;...
    7000, 15050.9;...
    7500, 16000.4;...
    8000, 17400.9;...
    8500, 18800.4;...
    9000, 19400.9;...
    9500, 20700.4;...
    10000,21650.9;...
    ];

if nargin==0
  b = stapes_data;
else
  
  if fs<=20000
    % In this case, we need to cut the table because the sampling
    % frequency is too low to accomodate the full range.
    
    indx=find(stapes_data(:,1)<fs/2);
    stapes_data=stapes_data(1:indx(end),:);
  end;  
  
  % We need to find inverse because original data is stapes impedance and we
  % need stapes velocity.
  stapes_data (:,2) = 1./stapes_data(:,2); 

  stapes_data_old (:,2) = 1./stapes_data_old(:,2); 

  % Extract the frequencies and amplitudes, and put them in the format
  % that fir2 likes.
%   freq=[0;...
%         stapes_data(:,1).*(2/fs);...
%         1];
%   ampl=[0;...
%         stapes_data(:,2);...
%         0];
%   

  freq=[0;...
        stapes_data_old(:,1).*(2/fs);...
        1];
  ampl=[0;...
        stapes_data_old(:,2);...
        0];
    
    
  b = fir2(order,freq,ampl);
  
  % See the figure text for figure 1, Lopez (2001).
  b = b/max(abs(fft(b)))*1e-8*10^(104/20); 

end;
% close all
% loglog(stapes_data_old(:,1),stapes_data_old(:,2),'k')
% hold on
% loglog(stapes_data(:,1),stapes_data(:,2),'b')


